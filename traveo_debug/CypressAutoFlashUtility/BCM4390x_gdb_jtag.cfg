#
# $ Copyright Cypress Semiconductor $
#

# Function to read a word from memory
proc memread32 {address} {
    mem2array memar 32 $address 1
    return $memar(0)
}

# default ports
telnet_port 4444
gdb_port 3333
gdb_memory_map enable


init

reset halt

cortex_r4 maskisr on

# Force use of hardware breakpoints. Software breakpoints currently cause the processor to get stuck when the icache is enabled
gdb_breakpoint_override hard

# Force backplane run on fast HT clock (160Mhz) even in sleep mode.
# Alternatively we should be able to keep talking to board even in sleep mode
# if switch adapter frequency to below ILP clock (32Khz) after image is downloaded.
set CHIPC_CCS_REG 0x180001e0
set ccs_reg_val [memread32 $CHIPC_CCS_REG]
mww $CHIPC_CCS_REG [expr $ccs_reg_val | 0x2]

# Now that the chip is out of reset, increase the JTAG speed
adapter speed 10000

# SRST does not currently reset the system properly - the following is required to work around this.

# Clear LR to avoid having the debugger think that there is a stack frame
reg lr   0x0

# Copy the ROM vectors to the FLOPS area
set FLOPS_ADDRESS 0

# reset instruction
mww [expr $FLOPS_ADDRESS + 0x0 ] 0xB03EF000

# all others zero
set vector_loc  0x04
while { ( $vector_loc < 32 ) } {
    mww [expr $vector_loc + $FLOPS_ADDRESS] 0x00000000
    set vector_loc [expr $vector_loc + 4]
}

# cleanup socsram settings
set SOCSRAM_X_INDEX  0x1800c010
set SOCSRAM_X_PDA    0x1800c044
mww $SOCSRAM_X_INDEX 0
mww $SOCSRAM_X_PDA   0x80000000
mww $SOCSRAM_X_INDEX 1
mww $SOCSRAM_X_PDA   0x80000000
mww $SOCSRAM_X_INDEX 2
mww $SOCSRAM_X_PDA   0x80000000
mww $SOCSRAM_X_INDEX 3
mww $SOCSRAM_X_PDA   0x80000000
mww $SOCSRAM_X_INDEX 4
mww $SOCSRAM_X_PDA   0x80000000
mww $SOCSRAM_X_INDEX 5
mww $SOCSRAM_X_PDA   0x80000000
mww $SOCSRAM_X_INDEX 6
mww $SOCSRAM_X_PDA   0x80000000
mww $SOCSRAM_X_INDEX 7
mww $SOCSRAM_X_PDA   0x80000000
