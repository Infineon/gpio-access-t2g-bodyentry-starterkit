# This is an STM32F746G discovery board with a single STM32F746NGH6 chip.
# http://www.st.com/content/st_com/en/products/evaluation-tools/product-evaluation-tools/mcu-eval-tools/stm32-mcu-eval-tools/stm32-mcu-discovery-kits/32f746gdiscovery.html

# This is for using the onboard STLINK/V2-1
source [find interface/stlink.cfg]

transport select hla_swd

# increase working area to 256KB
set WORKAREASIZE 0x40000

source [find target/stm32f7x.cfg]

set _CMSPINAME $_CHIPNAME.cmspi
flash bank $_CMSPINAME cmspi 0x90000000 0 0 0 $_TARGETNAME \
	0x3FC 0x40020414  6 0x40020414  2 \
	0x40020C14 13 0x3EC 0x3EC 0x04000000 0x40021014  2 0x3EC 0x3EC 0x00000010 \
	0x40020C14 12 0x3EC 0x3EC 0x01000000 0x40020C14 11 0x3EC 0x3EC 0x00400000

# mode 0: 1-1-1 SPI, mode 1: 2-2-2 DPI, mode 2: 4-4-4 QPI
proc cmspi_init { mode } {
	mmw 0x40023830 0x000007FF 0				;# RCC_AHB1ENR |= GPIOA-GPIOK (enable clocks)

	# NCS: PB06, CLK: PB02, IO3/NHOLD: PD13, IO2/NWP: PE02, IO1/MISO: PD12, IO0/MOSI: PD11
	# PB06:PP:M, PB02:PP:V, PD13:INUP:V, PD12:INUP:V, PD11:INUP:V, PE02:INUP:V
	# Port B: PB06:PP:M, PB02:PP:V
	mmw 0x40020400 0x00001010 0x00002020	;# MODER
	mmw 0x40020404 0x00000000 0x00000044	;# OTYPER
	mmw 0x40020408 0x00001030 0x00002000	;# OSPEEDR
	mmw 0x4002040C 0x00000000 0x00003030	;# PUPDR
	# Port D: PD13:INUP:V, PD12:INUP:V, PD11:INUP:V
	mmw 0x40020C00 0x00000000 0x0FC00000	;# MODER
	mmw 0x40020C08 0x0FC00000 0x00000000	;# OSPEEDR
	mmw 0x40020C0C 0x05400000 0x0A800000	;# PUPDR
	mmw 0x40020C14 0x00003800 0x00000000	;# ODR
	# Port E: PE02:INUP:V
	mmw 0x40021000 0x00000000 0x00000030	;# MODER
	mmw 0x40021008 0x00000030 0x00000000	;# OSPEEDR
	mmw 0x4002100C 0x00000010 0x00000020	;# PUPDR
	mmw 0x40021014 0x00000004 0x00000000	;# ODR

	# the N25Q128 switches automatically back to SPI when receiving RDID 0x9F --- undocumented
	cmspi qpi 1 10; cmspi cmd 1 3 0x9F; cmspi spi 1; cmspi cmd 1 3 0x9F

	if { $mode == 1 } {
		# switch to DPI mode, read id
		cmspi cmd 1 0 0x06; cmspi cmd 1 0 0x61 0x9F; cmspi dpi 1 10; cmspi cmd 1 3 0xAF;

		# DPI mode needs the special read command 0x0B
		cmspi set 1 "micron n25q128" 0x1000000 0x100 0x03 0x0B 0x02 0xC7 0x10000 0xD8
	} else {
		if { $mode == 2 } {
			# switch to QPI mode, read id
			cmspi cmd 1 0 0x06; cmspi cmd 1 0 0x61 0x5F; cmspi qpi 1 10; cmspi cmd 1 3 0xAF;
		}
	}

	# read  'Volatile Configuration Register' and 'Volatile Enhanced Configuration Register'
	cmspi cmd 1 1 0x85; cmspi cmd 1 1 0x65
}

$_TARGETNAME configure -event reset-init {
	mww 0x40023C00 0x00000006				;# 6 WS for 192 MHz HCLK
	sleep 1
	mww 0x40023804 0x24003008				;# 192 MHz: PLLM=8, PLLN=192, PLLP=2
	mww 0x40023808 0x00009400				;# APB1: /4, APB2: /2
	mmw 0x40023800 0x01000000 0x00000000	;# PLL on
	sleep 1
	mmw 0x40023808 0x00000002 0x00000000	;# switch to PLL

	adapter_khz 4000
}
