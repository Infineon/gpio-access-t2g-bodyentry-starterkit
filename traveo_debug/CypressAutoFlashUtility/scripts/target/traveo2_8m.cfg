# The following four lines can be used to override Flash Geometry of the target device
# In this case configuration scripts will not perform any auto-detection and will use
# predefined values.
# If all these variables are set to zero, configuration scripts will attempt to detect
# the type of target device by reading SiliconID from SFlash and matching it with MPN
# database, see cympn.cfg file.
set MAIN_LARGE_SECTOR_NUM 254
set MAIN_SMALL_SECTOR_NUM 32
set WORK_LARGE_SECTOR_NUM 96
set WORK_SMALL_SECTOR_NUM 512

# Reset configuration - use hardware XRES pin
# If this line is commented-out OpenOCD will use SYSRESETREQ to reset the CM0+ core and
# all peripherals. This will also reset CM4/CM7 cores.
# reset_config srst_only srst_pulls_trst

# Defines the name of the Target and allows to override it from the command line
global _CHIPNAME
if { [info exists CHIPNAME] } {
	set _CHIPNAME $CHIPNAME
} else {
	set _CHIPNAME traveo2_8m
}

# External Memory configuration
# The following variables can be set to '1' in the command line to enable corresponding
# external memory banks:
# set ENABLE_HYPERFLASH  1
# set ENABLE_DUALQUADSPI 1
if { [info exists ENABLE_HYPERFLASH] } {
	set _ENABLE_HYPERFLASH $ENABLE_HYPERFLASH
} else {
	set _ENABLE_HYPERFLASH 0
}

if { [info exists ENABLE_DUALQUADSPI] } {
	set _ENABLE_DUALQUADSPI $ENABLE_DUALQUADSPI
} else {
	set _ENABLE_DUALQUADSPI 0
}

# Default flash loaders, can be overriden from the command line
if { ![info exists HYPERFLASH_LOADER] } {
	set HYPERFLASH_LOADER TV2BH_8M_HyperFlash_SI.elf
}

if { ![info exists HYPERRAM_LOADER] } {
	set HYPERRAM_LOADER TV2BH_8M_HyperRAM_SI.elf
}

if { ![info exists DUALQUADSPI_LOADER] } {
	set DUALQUADSPI_LOADER TV2BH_8M_DualQuadSPI_SI.elf
}

# Include common functionality script
source [find target/traveo2_68m_common.cfg]

# Define external Flash Banks, if enabled
if { $_ENABLE_HYPERFLASH } {
	flash bank ${_CHIPNAME}_hyperflash_cm0	cmsis_flash 0x60000000 0x4000000 4 4 ${TARGET}.cm0 ../flm/cypress/traveo2/${HYPERFLASH_LOADER} 0x1000
	flash bank ${_CHIPNAME}_hyperflash_cm70	virtual 0x60000000 0 0 0 ${TARGET}.cm70 ${_CHIPNAME}_hyperflash_cm0
	flash bank ${_CHIPNAME}_hyperflash_cm71	virtual 0x60000000 0 0 0 ${TARGET}.cm71 ${_CHIPNAME}_hyperflash_cm0
}

if { $_ENABLE_DUALQUADSPI } {
	flash bank ${_CHIPNAME}_qspi_cm0	cmsis_flash 0x60000000 0x4000000 4 4 ${TARGET}.cm0 ../flm/cypress/traveo2/${DUALQUADSPI_LOADER} 0x1000
	flash bank ${_CHIPNAME}_qspi_cm70	virtual 0x60000000 0 0 0 ${TARGET}.cm70 ${_CHIPNAME}_qspi_cm0
	flash bank ${_CHIPNAME}_qspi_cm71	virtual 0x60000000 0 0 0 ${TARGET}.cm71 ${_CHIPNAME}_qspi_cm0
}

# Procedure to enable external HyperRAM
# Script loads initialization code to target RAM and executes it
# Initialization code is responsible for enabling external RAM and
# mapping it to the CPU address space
proc enable_hyperram { {xip_base 0x64000000} } {
	global HYPERRAM_LOADER

	catch {
		load_image ../flm/cypress/traveo2/${HYPERRAM_LOADER} 0x28000800
		reg pc 0x28000800
		reg sp 0x28010000
		reg r0 $xip_base
		reg r1 0
		reg r2 3
		reg r9 0x28002800
		resume 0x28000800
		wait_halt
	}
}
